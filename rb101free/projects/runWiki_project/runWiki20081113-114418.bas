'Run Wiki v1.01'This is the original Run Wiki.  There is a new Run Wiki 2, but this one is included also'so that users can have a simple wiki to easily understand and extend for their own'purposes.call setCSSglobal currentName$, currentContent$, #editPage, #wiki, #user, #password, user$call createDefaultUsercall createHomePageRowcurrentName$ = "HOME"call loadCurrentPagecall displayCurrentPagewaitsub displayCurrentPage  cls  div title    print "Run Wiki"    div copyright      print "Copyright 2008, Shoptalk Systems"    end div  end div  div navigation    if user$ = "" then        print "Welcome, Visitor"        print "User: ";        textbox #user, "", 5 : print        print "Password: ";        passwordbox #password, "", 5 : print        link #login, "Log in", [login]      else        print "Welcome, "; user$        link #logout, "Log out", [logout]    end if  end div  div page    print "This page: "; currentName$    if user$ <> "" then        link #editPage, "Edit this page", [editPage] : print    end if    print    call renderPage  end divend sub[login]  call connect  #wiki execute("SELECT * from USERS where name = '"; #user contents$(); "' and password = '"; #password contents$(); "'")  if #wiki hasanswer() then      user$ = #user contents$()      call disconnect    else      call disconnect      cls      div notice        print "Login failed.  Bad username or password."        link #retry, "Try again.", [tryAgain]        wait     end div  end if[tryAgain]  call displayCurrentPage  wait[logout]  user$ = ""  call displayCurrentPage  wait  sub renderPage  buffer$ = currentContent$  while buffer$ <> ""    leftBrace = instr(buffer$, "[")    if leftBrace = 0 then      html buffer$      buffer$ = ""    else      if leftBrace > 1 then        html left$(buffer$, leftBrace-1)        buffer$ = mid$(buffer$, leftBrace)      else  'leftBrace = 1        rightBrace = instr(buffer$, "]")        if rightBrace < 3 then          html buffer$          buffer$ = ""        else          queryName$ = mid$(buffer$, 2, rightBrace - 2)          if (pageExists(queryName$)) then            link #exists, queryName$, loadPage            #exists setkey(queryName$)          else            link #doesntExist, "?"+queryName$, createPage            #doesntExist setkey(queryName$)          end if          buffer$ = mid$(buffer$, rightBrace+1)        end if      end if    end if  wendend subsub createPage name$  cls  html "<h2>Create Page - "; name$; "</h2>"  textarea #editPage, "" : print  link #accept, "Accept", [acceptNew] : print " ";  #accept setkey(name$)  link #cancel, "Cancel", [cancelNew]end subsub loadPage name$  currentName$ = name$  call loadCurrentPage  call displayCurrentPageend sub[acceptNew]  newContent$ = #editPage contents$()  call connect  #wiki execute("insert into pages (NAME, CONTENT, DATE, TIME) values ("""; EventKey$; """, """; doubleQuote$(newContent$); """, "; date$("days"); ", "; time$("seconds"); ")")  call disconnect  currentName$ = EventKey$  currentContent$ = newContent$[cancelNew]  call displayCurrentPage   waitfunction pageExists(name$)  call connect  #wiki execute("SELECT * from pages where NAME="""; name$; """")  pageExists = #wiki hasAnswer()  call disconnectend function[editPage]  cls  html "<h2>Edit page "; currentName$; "</h2>"  textarea #area, currentContent$ : print  link #acceptEdit, "Accept", [acceptEdit] : print " ";  link #cancelEdit, "Cancel", [cancelEdit]  wait[acceptEdit]  newContent$ = #area contents$()  query$ = "update pages set CONTENT = """; doubleQuote$(newContent$); """ where NAME = """; currentName$; """"  call execute query$  currentContent$ = newContent$[cancelEdit]  call displayCurrentPage  waitsub loadCurrentPage  call connect    #wiki execute("select (CONTENT) from pages where NAME = """; currentName$; """")    if #wiki hasAnswer() then      currentContent$ = #wiki nextRow$("")    else      currentContent$ = "Page named "; currentName$; " does not exist."    end if  call disconnectend subsub createDefaultUser  call connect    #wiki execute("SELECT * FROM sqlite_master WHERE name = 'users' and type='table'")    if not(#wiki hasanswer()) then        #wiki execute("create table users(NAME text, PASSWORD text)")           #wiki execute("INSERT INTO users (NAME, PASSWORD) VALUES('admin', 'password')")    end if  call disconnectend subsub createHomePageRow  call connect  '#wiki execute("create table pages (NAME text, CONTENT text, DATE int, TIME int) ")  #wiki execute("select * from pages")  if not(#wiki hasanswer()) then    content$ = "This is your initial home page for Run Wiki.  Please edit this and make it your own."    #wiki execute("INSERT INTO PAGES (NAME, CONTENT, DATE, TIME) VALUES ('HOME', '"; content$; "', "; date$("days"); ", "; time$("seconds"); ")")  end if  call disconnectend subsub connect  sqliteconnect #wiki, "wiki.db"end subsub disconnect  #wiki disconnect()end subsub execute sqlStatement$  call connect  #wiki execute(sqlStatement$)  call disconnectend subfunction doubleQuote$(string$)  if instr(string$, chr$(34)) then    for x = 1 to len(string$)      if mid$(string$, x, 1) = chr$(34) then doubleQuote$ = doubleQuote$ + chr$(34)      doubleQuote$ = doubleQuote$ + mid$(string$, x, 1)    next x  else      doubleQuote$ = string$  end ifend functionsub setCSS  cssid #title, "{ font-family: Tahoma; font-size: 20pt; font-weight: bold; background-repeat: no-repeat; background-image: url('/resources/electronicbanner.JPG') ; height: 80px}"  cssid #copyright, "{ font-size: 8pt }"  cssid #navigation, "{font-family: Tahoma; padding: 4px; background: #CFC; width: 150px; height: 600px; float: left }"  cssid #page, "{font-family: Tahoma; padding: 4px; margin-left: 155px}"  cssid #dialog, "{ font-family: Tahoma; background: #CFC; border-bottom: 1px solid #898; padding: 8px; width: 784px}"end sub